---
import SidebarListItem from "./SidebarListItem.astro";

interface Props {
  tags: {
    value: string;
    id: string | number;
  }[];
  selectedCategoryTag?: string;
}

const { tags, selectedCategoryTag = "", ...props } = Astro.props;
---

<aside
  {...props}
  x-show="isSidePanelOpen"
  x-transition:enter="transition ease-in-out duration-150"
  x-transition:enter-start="-translate-x-[100%]"
  x-transition:enter-end="translate-x-0"
  x-transition:leave="transition ease-in-out duration-150"
  x-transition:leave-start="translate-x-0"
  x-transition:leave-end="-translate-x-[100%]"
  class="max-sm:hidden w-[256px] max-sm:shadow-xl max-sm:absolute max-sm:top-0 max-sm:left-0 max-sm:bottom-0 max-sm:z-20 max-h-screen overflow-y-auto top-0 left-0 overscroll-contain bg-slate-200"
  x-ref="sidebar"
  x-init="$el.classList.remove('max-sm:hidden');"
>
  <ul class="flex flex-col sm:shadow-inner">
    <SidebarListItem
      isSelected={selectedCategoryTag === ""}
      text="All"
      title="View all the Top Christian Apps and Tools"
      link="/"
    />
    {
      tags.map((tag) => (
        <SidebarListItem
          isSelected={selectedCategoryTag === tag.value}
          text={tag.value}
          title={`Open the Top Christian ${tag.value} Apps and Tools`}
          link={`/${tag.value?.replaceAll(" ", "-")}`}
          x-init={
            selectedCategoryTag === tag.value
              ? "$refs.sidebar.scrollTo(0, $el.offsetTop - 32);"
              : ""
          }
        />
      ))
    }
  </ul>
</aside>
