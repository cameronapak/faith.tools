---
interface Props {
  size?: "sm" |"md";
}

const { size = "md" } = Astro.props;

const iconSize = {
  sm: 20,
  md: 24
}
---

<button
  type="button"
  title="Share"
  x-data={`{
    shareCurrentLink() {
      if (navigator.share) {
        navigator.share({
          title: document.title,
          url: window.location.href
        }).then(() => {
          console.log('Thanks for sharing!');
        }).catch(console.error);
      } else {
        navigator.clipboard.writeText(window.location.href); 
        setTimeout(() => alert('Link has been copied to your clipboard. Paste to share!'), 500);
      }
    }
  }`}
  class={`btn btn-circle btn-outline hover:bg-slate-200 border-slate-300 text-slate-600 hover:text-slate-600 hover:border-slate-300 btn-${size}`}
  x-on:click="shareCurrentLink()"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={iconSize[size]}
    height={iconSize[size]}}
    viewBox="0 0 24 24"
  >
    <path
      fill="none"
      stroke="currentColor"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 5v8.5M15 7l-3-3l-3 3m-4 5v5a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-5"
    ></path>
  </svg>
</button>
